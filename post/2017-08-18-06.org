#+BLOG: wisdomandwonder
#+POSTID: 10681
#+ORG2BLOG:
#+DATE: [2017-08-18 Fri 18:58]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil
#+CATEGORY: Article
#+TAGS: Programming Language, Go Lang, GBEN
#+TITLE: (Go Lang) Methods (GBEN)

[[https://gobyexample.com/structs][Go by Example]]
* Example
- It has it
#+HTML: <!--more-->
#+NAME: org_gcr_2017-08-18_mara_E3C991A9-2FDC-4D6F-9146-7DF2D55A20FA
#+BEGIN_SRC go :results output
package main
import "fmt"

// Go supports methods defined on struct types.

type rect struct {
  width, height int
}
// This area method has a receiver type of *rect.
func (r *rect) area() int {
  return r.width * r.height
}

// Methods can be defined for either pointer or value receiver types. Hereâ€™s
// an example of a value receiver.
func (r rect) perim() int {
  return 2*r.width + 2*r.height
}

func main() {
  r := rect{width: 10, height: 5}
  // Here we call the 2 methods defined for our struct.
  fmt.Println("area: ", r.area())
  fmt.Println("perim:", r.perim())
  // Go automatically handles conversion between values and pointers for
  // method calls. You may want to use a pointer receiver type to avoid
  // copying on method calls or to allow the method to mutate the receiving
  // struct.
  rp := &r
  fmt.Println("area: ", rp.area())
  fmt.Println("perim:", rp.perim())
}
#+END_SRC

#+RESULTS: org_gcr_2017-08-18_mara_E3C991A9-2FDC-4D6F-9146-7DF2D55A20FA
#+BEGIN_EXAMPLE
area:  50
perim: 30
area:  50
perim: 30
#+END_EXAMPLE

[[https://www.wisdomandwonder.com/article/10651/go-lang-go-by-example-notes-gben][Attribution]]
