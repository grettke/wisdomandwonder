#+POSTID: 5302
#+DATE: [2010-09-25 Sat 02:42]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil TeX:nil
#+CATEGORY: Link
#+TAGS: ML, OCaml, Programming Language
#+TITLE: Resources for Learning CamlP4 

#+BEGIN_QUOTE
  For an accessible introduction to modern (>= 3.10) Camlp4, you may be interested in Jake Donham's blog post series "Reading Camlp4" : [[http://ambassadortothecomputers.blogspot.com/search/label/camlp4]]
You will also find valuable (though incomplete) information on the camlp4 wiki : [[http://brion.inria.fr/gallium/index.php/Camlp4]]

The older version of camlp4 (< 3.10, now called camlp5) also provides a documentation
[[http://caml.inria.fr/pub/docs/tutorial-camlp4/index.html]] , and you can also use to Martin Jambon's tutorial
[[http://martin.jambon.free.fr/extend-ocaml-syntax.html]] (for the older camlp4).
#+END_QUOTE


-- bluestorm



#+BEGIN_QUOTE
  You can also see the articles in sequence at

 [[http://ambassadortothecomputers.blogspot.com/p/reading-camlp4.html][http://ambassadortothecomputers.blogspot.com/p/reading-camlp4.html
]]
which I recommend since later articles depend on earlier material.
#+END_QUOTE


-- Jake Donham



#+BEGIN_QUOTE
  Shameless self-plug, but I wrote a blog post this summer about my experience figuring out how to do it. I provide a walk-through and explanation of a minimal syntax extension which adds lazy list pattern matching support based on Batteries. The URL:

[[http://www.elehack.net/michael/blog/2010/06/ocaml-syntax-extension]]

I do assume a basic knowledge of parsing context-free grammars, but a generic tutorial on parsing with a tool such as Yacc can fill in that gap. The Wikipedia article[1] may also be helpful.

Once you've lept the hurdle of figuring out what pieces you need to write and build a syntax extension, the remaining tricky part is to figure out what pieces of the grammar you need to extend to accomplish your objective. For that, I consult the definition of the OCaml parser in Camlp4OCamlParser.ml in the OCaml source tree.
1. [[http://en.wikipedia.org/wiki/Context-free_grammar]]

#+END_QUOTE


-- Michael Ekstrand



#+BEGIN_QUOTE
  If you consider yourself as a n00b, don't start by camlp4. This is probably the most difficult part of OCaml -- and to program camlp4 you need to use OCaml standard syntax (or revised syntax, it depends if you
use antiquotations).

If you still want to follow the hard path, as suggested elsewhere, Jake Donham's blog posts are very good:

 [[http://ambassadortothecomputers.blogspot.com/p/reading-camlp4.html]]

Or if you are around, there is a tutorial session at CUFP:
[[http://cufp.org/conference/sessions/2010/camlp4-and-template-haskell]].
(but you need to subscribe).

#+END_QUOTE


-- Sylvain Le Gall

(via [[http://groups.google.com/group/fa.caml/browse_thread/thread/1751a2c308742ac3/9868366e281f02c1?lnk=gst&q=what+do+I+need+to+know+to+understand+camlp][Caml-list]])




