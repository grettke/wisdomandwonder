#+BLOG: wisdomandwonder
#+POSTID: 10655
#+ORG2BLOG:
#+DATE: [2017-08-10 Thu 22:34]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil
#+CATEGORY: Article
#+TAGS: Programming Language, Go Lang, GBEN
#+TITLE: (Go Lang) Variables (GBEN)

[[https://gobyexample.com/variables][Go by Example]]
* Example
- Typed variables are either declared explicitly or inferred
- Assignment is ~=~
- Both multiple declaration and assignment
- Numeric initialize default to zero
- ~:=~ \rarr{} declaration of, inference and assignment to
#+HTML: <!--more-->
#+NAME: org_gcr_2017-08-10_mara_D34983B8-75E8-49A1-9BC0-4F99807A33D9
#+BEGIN_SRC go :imports '("fmt") :results output
// var declares 1 or more variables.
var a string = "initial"
fmt.Println(a)
// You can declare multiple variables at once.
var b, c int = 1, 2
fmt.Println(b, c)
// Go will infer the type of initialized variables.
var d = true
fmt.Println(d)
// Variables declared without a corresponding initialization are zero-valued. For example, the zero value for an int is 0.
var e int
fmt.Println(e)
// The := syntax is shorthand for declaring and initializing a variable, e.g. for var f string = "short" in this case.
f := "short"
fmt.Println(f)
#+END_SRC

#+RESULTS: org_gcr_2017-08-10_mara_D34983B8-75E8-49A1-9BC0-4F99807A33D9
#+BEGIN_EXAMPLE
initial
1 2
true
0
short
#+END_EXAMPLE

[[https://www.wisdomandwonder.com/article/10651/go-lang-go-by-example-notes-gben][Attribution]]
