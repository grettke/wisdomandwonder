#+ORG2BLOG:
#+POSTID: 1317
#+DATE: [2008-12-14 Sun 19:56]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil TeX:nil
#+CATEGORY: Link
#+TAGS: Perl, Programming Language, Scheme, philosophy
#+TITLE: Scheme and the Philosophy Behind Perl 6

Contrast [[http://www.wall.org/~larry/][Larry Wall]]'s take on the "soon to be released" [[http://en.wikipedia.org/wiki/Perl_6][Perl 6]] today [in 2008]:



#+BEGIN_QUOTE
  
Don't design everything you will need in the next 100 years, but design the ability to create things we will need in 20 or 100 years. The heart of the Perl 6 effort is the extensibility we have built into the parser and introduced language changes as non-destructively as possible. 

#+END_QUOTE



(via [[http://www.computerworld.com.au/article/270267/-z_programming_languages_perl?pp=5&fp=&fpid=][Computerworld]])

with that of [R3RS] Scheme in 1986:



#+BEGIN_QUOTE
  
Programming languages should be designed not by piling feature on top of feature, but by removing the weaknesses and restrictions that make additional features appear necessary.

#+END_QUOTE



(via R3RS, referenced in [[http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-3.html][R5RS]])

In other words, language implementers ought to accept that they aren't going to "get it right" on the first try, and they should leave the language extensible for additions.

Are you as excited about Perl 6 as I am! :)



