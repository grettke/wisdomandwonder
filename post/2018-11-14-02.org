#+BLOG: wisdomandwonder
#+POSTID: 10795
#+ORG2BLOG:
#+DATE: [2018-11-14 Wed 21:17]
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil
#+CATEGORY: Article
#+TAGS: Babel, Emacs, Ide, Lisp, Literate Programming, Programming Language, Reproducible research, elisp, org-mode
#+TITLE: (Emacs+Org-Mode) Migrate From Ido To Ivy In One Quick Step

After avoiding migrating from Ido to Ivy for years I put in the time today.
Long story short it was simple, fast, and easy. Here is the micro version of
what it took:

#+HTML: <!--more-->

I avoided migrating for years despite your continued [[http://irreal.org/blog/?s=ivy][enthusiasm]] Jon. The block
for me was giving up Smex, and, Flx fuzzy matching. Turns out that Ivy
easily utilizes both. Here is how to set it up:

#+name: org_gcr_2018-11-14T14-46-04-06-00_cosmicality_0CAC8DF1-EA5D-4D16-AB41-8875E10FD237
#+begin_src emacs-lisp
(use-package counsel
  :ensure t
  :config
  (use-package smex
    :ensure t)
  (use-package flx
    :ensure t)
  (ivy-mode 1)
  (setq ivy-use-virtual-buffers t)
  ;; intentional space before end of string
  (setq ivy-count-format "(%d/%d) ")
  (setq ivy-initial-inputs-alist nil)
  (setq ivy-re-builders-alist
        '((t . ivy--regex-fuzzy))))
#+end_src

It is really that easy. You get exactly the fuzzy matching that you expect. As
to the power of Ivy+Counsel+Swiper well I still don't get it but now I have
it. I'm just using the plain old stuff for now. So what do you do with it anyway?

The documentation explains what Ivy functions to use to replace the built in
equivalents. Here were the most obvious places to start. 

#+name: org_gcr_2018-11-14T14-46-04-06-00_cosmicality_E916E316-E704-45B0-83F6-2E3F3C57321B
#+begin_src emacs-lisp
(global-set-key (kbd "M-j") #'counsel-M-x)
(global-set-key (kbd "C-o") #'counsel-find-file)
#+end_src
